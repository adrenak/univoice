{
  "api/Adrenak.UniVoice.AudioFrame.html": {
    "href": "api/Adrenak.UniVoice.AudioFrame.html",
    "title": "Struct AudioFrame | UniVoice documentation",
    "keywords": "Struct AudioFrame Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax [Serializable] public struct AudioFrame Fields channelCount The number of channels in the audio Declaration public int channelCount Field Value Type Description System.Int32 frequency The frequency (or sampling rate) of the audio Declaration public int frequency Field Value Type Description System.Int32 samples A byte array representing the audio data Declaration public byte[] samples Field Value Type Description System.Byte [] timestamp The UTC Unix timestamp (in ms) when the samples were captured. The timestamp is local to the client the audio was captured from. Declaration public long timestamp Field Value Type Description System.Int64"
  },
  "api/Adrenak.UniVoice.ClientSession-1.html": {
    "href": "api/Adrenak.UniVoice.ClientSession-1.html",
    "title": "Class ClientSession<T> | UniVoice documentation",
    "keywords": "Class ClientSession<T> Handles a client session. Requires an implementation of IAudioClient<T> , IAudioInput and IAudioOutputFactory each. Allows adding input and output filters and handles their execution. Inheritance System.Object ClientSession<T> Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public class ClientSession<T> : IDisposable Type Parameters Name Description T Constructors ClientSession(IAudioClient<T>, IAudioInput, IAudioOutputFactory) Declaration public ClientSession(IAudioClient<T> client, IAudioInput input, IAudioOutputFactory outputFactory) Parameters Type Name Description IAudioClient <T> client IAudioInput input IAudioOutputFactory outputFactory Properties Client Declaration public IAudioClient<T> Client { get; set; } Property Value Type Description IAudioClient <T> Input The IAudioInput that's used for sourcing outgoing audio Declaration public IAudioInput Input { get; set; } Property Value Type Description IAudioInput InputFilters The input IAudioFilter that will be applied to the outgoing audio for all the peers. Note that filters are executed in the order they are present in this list Declaration public List<IAudioFilter> InputFilters { get; set; } Property Value Type Description System.Collections.Generic.List < IAudioFilter > OutputFactory The IAudioOutputFactory that creates the IAudioOutput of peers Declaration public IAudioOutputFactory OutputFactory { get; set; } Property Value Type Description IAudioOutputFactory OutputFilters The output IAudioFilter that will be applied to the incoming audio for all the peers. Note that filters are executed in the order they are present in this list. Declaration public List<IAudioFilter> OutputFilters { get; set; } Property Value Type Description System.Collections.Generic.List < IAudioFilter > PeerOutputs The IAudioOutput instances of each peer in the session Declaration public Dictionary<T, IAudioOutput> PeerOutputs { get; } Property Value Type Description System.Collections.Generic.Dictionary <T, IAudioOutput > Methods Dispose() Declaration public void Dispose()"
  },
  "api/Adrenak.UniVoice.Filters.ConcentusDecodeFilter.html": {
    "href": "api/Adrenak.UniVoice.Filters.ConcentusDecodeFilter.html",
    "title": "Class ConcentusDecodeFilter | UniVoice documentation",
    "keywords": "Class ConcentusDecodeFilter Decodes Opus encoded audio. Use this as a filter for incoming client audio. Inheritance System.Object ConcentusDecodeFilter Implements IAudioFilter Namespace : Adrenak.UniVoice.Filters Assembly : cs.temp.dll.dll Syntax public class ConcentusDecodeFilter : IAudioFilter Constructors ConcentusDecodeFilter(Int32) Creates a Concentus decode filter. Declaration public ConcentusDecodeFilter(int decodeBufferLength = 11520) Parameters Type Name Description System.Int32 decodeBufferLength The length of the decode buffer. Default is 11520 to fit a large sample with frequency 48000, duration 120ms and 2 channels. This should be enough for almost all scenarios. Increase if you need more. Methods Run(AudioFrame) Declaration public AudioFrame Run(AudioFrame input) Parameters Type Name Description AudioFrame input Returns Type Description AudioFrame Implements IAudioFilter"
  },
  "api/Adrenak.UniVoice.Filters.ConcentusEncodeFilter.html": {
    "href": "api/Adrenak.UniVoice.Filters.ConcentusEncodeFilter.html",
    "title": "Class ConcentusEncodeFilter | UniVoice documentation",
    "keywords": "Class ConcentusEncodeFilter A filter that encodes audio using Opus. Use this as an output filter to reduce the size of outgoing client audio Inheritance System.Object ConcentusEncodeFilter Implements IAudioFilter Namespace : Adrenak.UniVoice.Filters Assembly : cs.temp.dll.dll Syntax public class ConcentusEncodeFilter : IAudioFilter Constructors ConcentusEncodeFilter(ConcentusFrequencies, Int32, Int32, Int32, Int32) Creates a Concentus encode filter Declaration public ConcentusEncodeFilter(ConcentusFrequencies encodeFrequency = ConcentusFrequencies.Frequency_16000, int resamplerQuality = 2, int encoderComplexity = 3, int encoderBitrate = 64000, int encodeBufferLength = 46080) Parameters Type Name Description ConcentusFrequencies encodeFrequency The frequency the encoder runs at. If the input audio frequency is different from this value, it will be resampled before encode. System.Int32 resamplerQuality Resampler quality [1, 10] System.Int32 encoderComplexity Encoder complexity [1, 10] System.Int32 encoderBitrate Encoder bitrate [16000, 256000]. Set to -1 to enable variable bitrate. System.Int32 encodeBufferLength The length of the encode buffer. Default is 46080 to fit a large sample with frequency 48000, duration 120ms and 2 channels. This should be enough for almost all scenarios. Increase if you need more. Properties SamplingFrequency Declaration public ConcentusFrequencies SamplingFrequency { get; } Property Value Type Description ConcentusFrequencies Methods Run(AudioFrame) Declaration public AudioFrame Run(AudioFrame input) Parameters Type Name Description AudioFrame input Returns Type Description AudioFrame Implements IAudioFilter"
  },
  "api/Adrenak.UniVoice.Filters.ConcentusFrequencies.html": {
    "href": "api/Adrenak.UniVoice.Filters.ConcentusFrequencies.html",
    "title": "Enum ConcentusFrequencies | UniVoice documentation",
    "keywords": "Enum ConcentusFrequencies Defines supported sampling frequencies for the Opus codec via Concentus. Namespace : Adrenak.UniVoice.Filters Assembly : cs.temp.dll.dll Syntax public enum ConcentusFrequencies Fields Name Description Frequency_12000 12 kHz sampling frequency, suitable for medium-band audio. Frequency_16000 16 kHz sampling frequency, commonly used for wideband speech. Frequency_24000 24 kHz sampling frequency, providing good quality for music and audio. Frequency_48000 48 kHz sampling frequency, offering the highest audio quality. Frequency_8000 8 kHz sampling frequency, typically used for narrowband audio."
  },
  "api/Adrenak.UniVoice.Filters.GaussianAudioBlur.html": {
    "href": "api/Adrenak.UniVoice.Filters.GaussianAudioBlur.html",
    "title": "Class GaussianAudioBlur | UniVoice documentation",
    "keywords": "Class GaussianAudioBlur A filter that applies Gaussian blur over audio data to smoothen it. This is somewhat effective in removing noise from the audio. Inheritance System.Object GaussianAudioBlur Implements IAudioFilter Namespace : Adrenak.UniVoice.Filters Assembly : cs.temp.dll.dll Syntax public class GaussianAudioBlur : IAudioFilter Constructors GaussianAudioBlur(Single, Int32) Declaration public GaussianAudioBlur(float sigma = 2F, int range = 2) Parameters Type Name Description System.Single sigma System.Int32 range Methods Run(AudioFrame) Declaration public AudioFrame Run(AudioFrame frame) Parameters Type Name Description AudioFrame frame Returns Type Description AudioFrame Implements IAudioFilter"
  },
  "api/Adrenak.UniVoice.Filters.html": {
    "href": "api/Adrenak.UniVoice.Filters.html",
    "title": "Namespace Adrenak.UniVoice.Filters | UniVoice documentation",
    "keywords": "Namespace Adrenak.UniVoice.Filters Classes ConcentusDecodeFilter Decodes Opus encoded audio. Use this as a filter for incoming client audio. ConcentusEncodeFilter A filter that encodes audio using Opus. Use this as an output filter to reduce the size of outgoing client audio GaussianAudioBlur A filter that applies Gaussian blur over audio data to smoothen it. This is somewhat effective in removing noise from the audio. Enums ConcentusFrequencies Defines supported sampling frequencies for the Opus codec via Concentus."
  },
  "api/Adrenak.UniVoice.html": {
    "href": "api/Adrenak.UniVoice.html",
    "title": "Namespace Adrenak.UniVoice | UniVoice documentation",
    "keywords": "Namespace Adrenak.UniVoice Classes ClientSession<T> Handles a client session. Requires an implementation of IAudioClient<T> , IAudioInput and IAudioOutputFactory each. Allows adding input and output filters and handles their execution. Utils Utils.Audio Utils.Bytes Utils.Network VoiceSettings Structs AudioFrame Interfaces IAudioClient<T> IAudioFilter Offers ways to modify audio after being captured. To prevent the audio from being sent (for example when performing some pass or gating) return an empty byte array (new byte[0]) IAudioInput Source of user voice input. This would usually be implemented over a microphone to get the users voice. But it can also be used in other ways such as streaming an mp4 file from disk. It's just an input and the source doesn't matter. IAudioOutput Responsible for handling incoming audio. You'd normally want a based implementation to play the audio in Unity. But this class can be used in other ways such as streaming the received audio to a server or writing it to a local file. It's just an audio output and the destination depends on your implementation. IAudioOutputFactory An abstract factory that creates a concrete IAudioOutput IAudioServer<T>"
  },
  "api/Adrenak.UniVoice.IAudioClient-1.html": {
    "href": "api/Adrenak.UniVoice.IAudioClient-1.html",
    "title": "Interface IAudioClient<T> | UniVoice documentation",
    "keywords": "Interface IAudioClient<T> Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public interface IAudioClient<T> : IDisposable Type Parameters Name Description T Properties ID The clients peer ID in the voice chat Declaration T ID { get; } Property Value Type Description T PeerIDs IDs of all the peers (except this client) in the voice chat Declaration List<T> PeerIDs { get; } Property Value Type Description System.Collections.Generic.List <T> YourVoiceSettings The voice settings of this client. Call SubmitVoiceSettings() after making changes to this object to submit the updates to the server. Declaration VoiceSettings YourVoiceSettings { get; } Property Value Type Description VoiceSettings Methods SendAudioFrame(AudioFrame) Sends an audio frame to the server for being broadcasted to the other peers Declaration void SendAudioFrame(AudioFrame frame) Parameters Type Name Description AudioFrame frame The audio frame to be sent SubmitVoiceSettings() Submits YourVoiceSettings to the server Declaration void SubmitVoiceSettings() Events OnJoined Fired when this client connects and joins the voice chat Includes the following parameters own peer ID (int). This should also get assigned to ID IDs of other peers. This should also get assigned to PeerIDs Declaration event Action<T, List<T>> OnJoined Event Type Type Description System.Action <T, System.Collections.Generic.List <T>> OnLeft Fired when this client disconnects and leaves the voice chat Declaration event Action OnLeft Event Type Type Description System.Action OnPeerJoined Fired when a new peer joins the voice chat. Provides the ID of the client as event data. Declaration event Action<T> OnPeerJoined Event Type Type Description System.Action <T> OnPeerLeft Fired when a client leaves the chatroom. Provides the ID of the client as event data. Declaration event Action<T> OnPeerLeft Event Type Type Description System.Action <T> OnReceivedPeerAudioFrame Event fired when an audio frame is received from another peer via the server. Parameters: peer ID: the ID of the peer that sent the audio frame AudioFrame: the frame containing audio data Declaration event Action<T, AudioFrame> OnReceivedPeerAudioFrame Event Type Type Description System.Action <T, AudioFrame >"
  },
  "api/Adrenak.UniVoice.IAudioFilter.html": {
    "href": "api/Adrenak.UniVoice.IAudioFilter.html",
    "title": "Interface IAudioFilter | UniVoice documentation",
    "keywords": "Interface IAudioFilter Offers ways to modify audio after being captured. To prevent the audio from being sent (for example when performing some pass or gating) return an empty byte array (new byte[0]) Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public interface IAudioFilter Methods Run(AudioFrame) Declaration AudioFrame Run(AudioFrame input) Parameters Type Name Description AudioFrame input Returns Type Description AudioFrame"
  },
  "api/Adrenak.UniVoice.IAudioInput.html": {
    "href": "api/Adrenak.UniVoice.IAudioInput.html",
    "title": "Interface IAudioInput | UniVoice documentation",
    "keywords": "Interface IAudioInput Source of user voice input. This would usually be implemented over a microphone to get the users voice. But it can also be used in other ways such as streaming an mp4 file from disk. It's just an input and the source doesn't matter. Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public interface IAudioInput : IDisposable Events OnFrameReady Declaration event Action<AudioFrame> OnFrameReady Event Type Type Description System.Action < AudioFrame >"
  },
  "api/Adrenak.UniVoice.IAudioOutput.html": {
    "href": "api/Adrenak.UniVoice.IAudioOutput.html",
    "title": "Interface IAudioOutput | UniVoice documentation",
    "keywords": "Interface IAudioOutput Responsible for handling incoming audio. You'd normally want a based implementation to play the audio in Unity. But this class can be used in other ways such as streaming the received audio to a server or writing it to a local file. It's just an audio output and the destination depends on your implementation. Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public interface IAudioOutput : IDisposable Methods Feed(AudioFrame) Feeds a AudioFrame object to the audio output. Declaration void Feed(AudioFrame frame) Parameters Type Name Description AudioFrame frame The audio data to be sent."
  },
  "api/Adrenak.UniVoice.IAudioOutputFactory.html": {
    "href": "api/Adrenak.UniVoice.IAudioOutputFactory.html",
    "title": "Interface IAudioOutputFactory | UniVoice documentation",
    "keywords": "Interface IAudioOutputFactory An abstract factory that creates a concrete IAudioOutput Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public interface IAudioOutputFactory Methods Create() Creates an instance of a concrete IAudioOutput class Declaration IAudioOutput Create() Returns Type Description IAudioOutput"
  },
  "api/Adrenak.UniVoice.IAudioServer-1.html": {
    "href": "api/Adrenak.UniVoice.IAudioServer-1.html",
    "title": "Interface IAudioServer<T> | UniVoice documentation",
    "keywords": "Interface IAudioServer<T> Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public interface IAudioServer<T> : IDisposable Type Parameters Name Description T Properties ClientIDs IDs of all the clients in the voice chat Declaration List<T> ClientIDs { get; } Property Value Type Description System.Collections.Generic.List <T> ClientVoiceSettings VoiceSettings of every client connected to the server Declaration Dictionary<T, VoiceSettings> ClientVoiceSettings { get; } Property Value Type Description System.Collections.Generic.Dictionary <T, VoiceSettings > Events OnClientVoiceSettingsUpdated Event fired when the peer voice settings are updated Declaration event Action OnClientVoiceSettingsUpdated Event Type Type Description System.Action OnServerStart Event fired when the server starts Declaration event Action OnServerStart Event Type Type Description System.Action OnServerStop Event fired when the server stops Declaration event Action OnServerStop Event Type Type Description System.Action"
  },
  "api/Adrenak.UniVoice.Inputs.html": {
    "href": "api/Adrenak.UniVoice.Inputs.html",
    "title": "Namespace Adrenak.UniVoice.Inputs | UniVoice documentation",
    "keywords": "Namespace Adrenak.UniVoice.Inputs Classes UniMicInput An IAudioInput implementation based on UniMic. For more on UniMic, visit https://www.github.com/adrenak/unimic"
  },
  "api/Adrenak.UniVoice.Inputs.UniMicInput.html": {
    "href": "api/Adrenak.UniVoice.Inputs.UniMicInput.html",
    "title": "Class UniMicInput | UniVoice documentation",
    "keywords": "Class UniMicInput An IAudioInput implementation based on UniMic. For more on UniMic, visit https://www.github.com/adrenak/unimic Inheritance System.Object UniMicInput Implements IAudioInput Namespace : Adrenak.UniVoice.Inputs Assembly : cs.temp.dll.dll Syntax public class UniMicInput : IAudioInput, IDisposable Constructors UniMicInput(Mic.Device) Declaration public UniMicInput(Mic.Device device) Parameters Type Name Description Mic.Device device Fields device Declaration public Mic.Device device Field Value Type Description Mic.Device Properties Device Declaration public Mic.Device Device { get; set; } Property Value Type Description Mic.Device Methods Dispose() Declaration public void Dispose() Events OnFrameReady Declaration public event Action<AudioFrame> OnFrameReady Event Type Type Description System.Action < AudioFrame > Implements IAudioInput"
  },
  "api/Adrenak.UniVoice.Outputs.html": {
    "href": "api/Adrenak.UniVoice.Outputs.html",
    "title": "Namespace Adrenak.UniVoice.Outputs | UniVoice documentation",
    "keywords": "Namespace Adrenak.UniVoice.Outputs Classes StreamedAudioSourceOutput An implementation of IAudioOutput that plays peer audio using StreamedAUdioSource, which is included in UniMic StreamedAudioSourceOutput.Factory Creates instances"
  },
  "api/Adrenak.UniVoice.Outputs.StreamedAudioSourceOutput.Factory.html": {
    "href": "api/Adrenak.UniVoice.Outputs.StreamedAudioSourceOutput.Factory.html",
    "title": "Class StreamedAudioSourceOutput.Factory | UniVoice documentation",
    "keywords": "Class StreamedAudioSourceOutput.Factory Creates instances Inheritance System.Object StreamedAudioSourceOutput.Factory Implements IAudioOutputFactory Namespace : Adrenak.UniVoice.Outputs Assembly : cs.temp.dll.dll Syntax public class Factory : IAudioOutputFactory Methods Create() Declaration public IAudioOutput Create() Returns Type Description IAudioOutput Implements IAudioOutputFactory"
  },
  "api/Adrenak.UniVoice.Outputs.StreamedAudioSourceOutput.html": {
    "href": "api/Adrenak.UniVoice.Outputs.StreamedAudioSourceOutput.html",
    "title": "Class StreamedAudioSourceOutput | UniVoice documentation",
    "keywords": "Class StreamedAudioSourceOutput An implementation of IAudioOutput that plays peer audio using StreamedAUdioSource, which is included in UniMic Inheritance System.Object StreamedAudioSourceOutput Implements IAudioOutput Namespace : Adrenak.UniVoice.Outputs Assembly : cs.temp.dll.dll Syntax public class StreamedAudioSourceOutput : MonoBehaviour, IAudioOutput, IDisposable Constructors StreamedAudioSourceOutput() Declaration [Obsolete(\"Cannot use new keyword to create an instance. Use the .New() method instead\")] public StreamedAudioSourceOutput() Properties Stream Declaration public StreamedAudioSource Stream { get; } Property Value Type Description StreamedAudioSource Methods Dispose() Disposes the instance by deleting the GameObject of the component. Declaration public void Dispose() Feed(AudioFrame) Feeds an incoming into the audio buffer. Declaration public void Feed(AudioFrame frame) Parameters Type Name Description AudioFrame frame New() Creates a new instance using the dependencies. Declaration public static StreamedAudioSourceOutput New() Returns Type Description StreamedAudioSourceOutput Implements IAudioOutput"
  },
  "api/Adrenak.UniVoice.Samples.html": {
    "href": "api/Adrenak.UniVoice.Samples.html",
    "title": "Namespace Adrenak.UniVoice.Samples | UniVoice documentation",
    "keywords": "Namespace Adrenak.UniVoice.Samples Classes PeerView ToggleExtension"
  },
  "api/Adrenak.UniVoice.Samples.PeerView.html": {
    "href": "api/Adrenak.UniVoice.Samples.PeerView.html",
    "title": "Class PeerView | UniVoice documentation",
    "keywords": "Class PeerView Inheritance System.Object PeerView Namespace : Adrenak.UniVoice.Samples Assembly : cs.temp.dll.dll Syntax public class PeerView : MonoBehaviour Properties AllowIncomingAudio Declaration public bool AllowIncomingAudio { get; set; } Property Value Type Description System.Boolean AllowOutgoingAudio Declaration public bool AllowOutgoingAudio { get; set; } Property Value Type Description System.Boolean Methods DisplaySpectrum(Single[]) Declaration public void DisplaySpectrum(float[] spectrum) Parameters Type Name Description System.Single [] spectrum SetPeerID(Int32) Declaration public void SetPeerID(int id) Parameters Type Name Description System.Int32 id Events OnAllowIncomingAudioChange Declaration public event Action<bool> OnAllowIncomingAudioChange Event Type Type Description System.Action < System.Boolean > OnAllowOutgoingAudioChange Declaration public event Action<bool> OnAllowOutgoingAudioChange Event Type Type Description System.Action < System.Boolean >"
  },
  "api/Adrenak.UniVoice.Samples.ToggleExtension.html": {
    "href": "api/Adrenak.UniVoice.Samples.ToggleExtension.html",
    "title": "Class ToggleExtension | UniVoice documentation",
    "keywords": "Class ToggleExtension Inheritance System.Object ToggleExtension Namespace : Adrenak.UniVoice.Samples Assembly : cs.temp.dll.dll Syntax public static class ToggleExtension Methods SetIsOnWithoutNotify(Toggle, Boolean) Declaration public static void SetIsOnWithoutNotify(this Toggle instance, bool value) Parameters Type Name Description Toggle instance System.Boolean value"
  },
  "api/Adrenak.UniVoice.Utils.Audio.html": {
    "href": "api/Adrenak.UniVoice.Utils.Audio.html",
    "title": "Class Utils.Audio | UniVoice documentation",
    "keywords": "Class Utils.Audio Inheritance System.Object Utils.Audio Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public static class Audio Methods CalculateRMS(Byte[]) Declaration public static float CalculateRMS(byte[] audio) Parameters Type Name Description System.Byte [] audio Returns Type Description System.Single"
  },
  "api/Adrenak.UniVoice.Utils.Bytes.html": {
    "href": "api/Adrenak.UniVoice.Utils.Bytes.html",
    "title": "Class Utils.Bytes | UniVoice documentation",
    "keywords": "Class Utils.Bytes Inheritance System.Object Utils.Bytes Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public class Bytes Methods BytesToFloats(Byte[]) Declaration public static float[] BytesToFloats(byte[] bytes) Parameters Type Name Description System.Byte [] bytes Returns Type Description System.Single [] FloatsToBytes(Single[]) Declaration public static byte[] FloatsToBytes(float[] floats) Parameters Type Name Description System.Single [] floats Returns Type Description System.Byte []"
  },
  "api/Adrenak.UniVoice.Utils.html": {
    "href": "api/Adrenak.UniVoice.Utils.html",
    "title": "Class Utils | UniVoice documentation",
    "keywords": "Class Utils Inheritance System.Object Utils Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public class Utils"
  },
  "api/Adrenak.UniVoice.Utils.Network.html": {
    "href": "api/Adrenak.UniVoice.Utils.Network.html",
    "title": "Class Utils.Network | UniVoice documentation",
    "keywords": "Class Utils.Network Inheritance System.Object Utils.Network Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public static class Network Properties LocalIPv4Address Declaration public static string LocalIPv4Address { get; } Property Value Type Description System.String"
  },
  "api/Adrenak.UniVoice.VoiceSettings.html": {
    "href": "api/Adrenak.UniVoice.VoiceSettings.html",
    "title": "Class VoiceSettings | UniVoice documentation",
    "keywords": "Class VoiceSettings Inheritance System.Object VoiceSettings Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public class VoiceSettings Fields deafenAll If true, we don't want any peer to listen to us Declaration public bool deafenAll Field Value Type Description System.Boolean deafenedPeers The peers we don't want listening to us Declaration public List<int> deafenedPeers Field Value Type Description System.Collections.Generic.List < System.Int32 > muteAll If true, we don't want to listen to any peer Declaration public bool muteAll Field Value Type Description System.Boolean mutedPeers The peers we don't want to listen to Declaration public List<int> mutedPeers Field Value Type Description System.Collections.Generic.List < System.Int32 > Methods SetDeaf(Int32, Boolean) Sets the deaf status of a peer Declaration public void SetDeaf(int peerId, bool state) Parameters Type Name Description System.Int32 peerId System.Boolean state SetMute(Int32, Boolean) Sets the mute status of a peer Declaration public void SetMute(int peerId, bool state) Parameters Type Name Description System.Int32 peerId System.Boolean state"
  },
  "index.html": {
    "href": "index.html",
    "title": "UniVoice | UniVoice documentation",
    "keywords": "UniVoice UniVoice is a voice chat/VoIP solution for Unity. Some features of UniVoice: 👥 Group voice chat. Multiple peers can join a chatroom and exchange audio. ⚙ Peer specific settings. Don't want to listen to a peer? Mute them. Don't want someone listening to you? Deafen them. 🎨 Customize your audio input, output and networking layers. 🌐 Configurable Network : UniVoice is networking agnostic. Implement the IAudioClient and IAudioServer interfaces using the networking plugin of your choice to have it send audio data over any networking solution. Built-in support for: Mirror networking. 🎤 Configurable Audio Input : UniVoice is audio input agnostic. You can change the source of outgoing audio by implementing the IAudioInput interface. Built-in support for: Capturing Mic audio as device input. 🔊 Configurable Audio Output : UniVoice is audio output agnostic. You can divert incoming audio to anywhere you want by implementing the IAudioOutput interface. Built-in support for: Playing incoming audio using Unity AudioSource. ✏️ Audio Filters : Modify outgoing and incoming audio by implementing the IAudioFilter interface. Built-in support for: Opus (Concentus) encoding & decoding. RNNoise based noise removal. Gaussian blurring for minor denoising. Installation ⚠️ OpenUPM may not have up to date releases. Install using NPM registry instead 👇 Ensure you have the NPM registry in the manifest.json file of your Unity project with the following scopes: \"scopedRegistries\": [ { \"name\": \"npmjs\", \"url\": \"https://registry.npmjs.org\", \"scopes\": [ \"com.npmjs\", \"com.adrenak.univoice\", \"com.adrenak.brw\", \"com.adrenak.unimic\", \"com.adrenak.concentus-unity\" ] } } Then add com.adrenak.univoice:x.y.z to the dependencies in your manifest.json file (where x.y.z is the version you wish to install). The list of versions is available on the UniVoice NPM page . Docs API reference is available here: http://www.vatsalambastha.com/univoice Samples This repository contains a sample scene for the Mirror network, which is the best place to see how UniVoice can be integrated into your project. The sample relies on Mirror networking to work. Follow the instructions below for enabling Mirror in your project before trying it out. Dependencies com.adrenak.brw for reading and writing messages for communication. See MirrorServer.cs and MirrorClient.cs where they're used. com.adrenak.unimic for easily capturing audio from any connected mic devices. See UniMicInput.cs for usage. Also used for streaming audio playback. See StreamedAudioSourceOutput.cs for usage. com.adrenak.concentus-unity for Opus encoding and decoding. See ConcentusEncodeFilter.cs and ConcentusDecodeFilter.cs for usage Activating non-packaged dependencies UniVoice includes and installs the dependencies mentioned above along with itself. The following implementations are available out of the box when you install it: Opus encoding/decoding filter (via Contentus-Unity) GaussianAudioBlur filter (plain C#, no dependencies used) Mic audio capture input (via UniMic) AudioSource based playback output (via UniMic) But the following implementations are based on dependencies that you have to install and enable via compilation symbols as they are not UniVoice dependencies and don't get installed along with UniVoice. This is because they are either third party modules or based on native libraries (not plain C#) that can pose build issues. Mirror network: To enable, ensure the Mirror package is in your project and add UNIVOICE_NETWORK_MIRROR to activate it RNNoise Noise removal filter: To enable, ensure the RNNoise4Unity package is in your project and add UNIVOICE_FILTER_RNNOISE4UNITY to activate it License and Support This project is under the MIT license . Community contributions are welcome. Contact The developer can be reached at the following links: Website LinkedIn GitHub Twitter Discord: adrenak#1934"
  }
}