{
  "api/Adrenak.UniVoice.ChatroomAgent.html": {
    "href": "api/Adrenak.UniVoice.ChatroomAgent.html",
    "title": "Class ChatroomAgent | UniVoice documentation",
    "keywords": "Class ChatroomAgent Provides the means to host or connect to a chatroom. Inheritance Object ChatroomAgent Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public class ChatroomAgent : IDisposable Constructors ChatroomAgent(IChatroomNetwork, IAudioInput, IAudioOutputFactory) Creates and returns a new agent using the provided dependencies. Declaration public ChatroomAgent(IChatroomNetwork chatroomNetwork, IAudioInput audioInput, IAudioOutputFactory audioOutputFactory) Parameters Type Name Description IChatroomNetwork chatroomNetwork The chatroom network implementation for chatroom access and sending data to peers in a chatroom. IAudioInput audioInput The source of the outgoing audio IAudioOutputFactory audioOutputFactory The factory used for creating IAudioOutput instances for peers so that incoming audio from peers can be played. Fields PeerOutputs There is a IAudioOutput for each peer that gets created using the provided AudioOutputFactory The IAudioOutput instance corresponding to a peer is responsible for playing the audio that we receive that peer. Declaration public Dictionary<short, IAudioOutput> PeerOutputs Field Value Type Description Dictionary < Int16 , IAudioOutput > PeerSettings ChatroomPeerSettings for each peer which allows you to read or change the settings for a specific peer. Use [id] to get settings for a peer with ID id; Declaration public Dictionary<short, ChatroomPeerSettings> PeerSettings Field Value Type Description Dictionary < Int16 , ChatroomPeerSettings > Properties AudioInput Source of outgoing audio that can be transmitted over the network to peers Declaration public IAudioInput AudioInput { get; } Property Value Type Description IAudioInput AudioOutputFactory A factory that returns an IAudioOutput instance. Used every time a Peer connects for that peer to get an output for that peer. Declaration public IAudioOutputFactory AudioOutputFactory { get; } Property Value Type Description IAudioOutputFactory CurrentMode The current ChatroomAgentMode of this agent Declaration public ChatroomAgentMode CurrentMode { get; } Property Value Type Description ChatroomAgentMode MuteOthers Mutes all the peers. If set to true, no incoming audio from other peers will be played. If you want to selectively mute a peer, use the muteThem flag in the PeerSettings instance for that peer. Declaration public bool MuteOthers { get; set; } Property Value Type Description Boolean MuteSelf Whether this agent is muted or not. If set to true, voice data will not be sent to ANY peer. If you want to selectively mute yourself to a peer, use the muteSelf flag in the PeerSettings instance for that peer. Declaration public bool MuteSelf { get; set; } Property Value Type Description Boolean Network The underlying network which the agent uses to host or connect to chatrooms, and send and receive data to and from peers Declaration public IChatroomNetwork Network { get; } Property Value Type Description IChatroomNetwork Methods Dispose() Disposes the instance. WARNING: Calling this method will also dispose the dependencies passed to it in the constructor. Be mindful of this if you're sharing dependencies between multiple instances and/or using them outside this instance. Declaration public void Dispose()"
  },
  "api/Adrenak.UniVoice.ChatroomAgentMode.html": {
    "href": "api/Adrenak.UniVoice.ChatroomAgentMode.html",
    "title": "Enum ChatroomAgentMode | UniVoice documentation",
    "keywords": "Enum ChatroomAgentMode Represents the mode that a ChatroomAgent is in. Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public enum ChatroomAgentMode Fields Name Description Guest The agent has joined a chatroom and is a guest there Host The agent is hosting a chatroom. May or may not have guests Unconnected The agent is neither connected to a chatroom nor hosting one."
  },
  "api/Adrenak.UniVoice.ChatroomAudioDTO.html": {
    "href": "api/Adrenak.UniVoice.ChatroomAudioDTO.html",
    "title": "Struct ChatroomAudioDTO | UniVoice documentation",
    "keywords": "Struct ChatroomAudioDTO A data structure representing the audio transmitted over the network. Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public struct ChatroomAudioDTO Fields channelCount THe number of channels in the audio Declaration public int channelCount Field Value Type Description Int32 frequency The frequency (or sampling rate) of the audio Declaration public int frequency Field Value Type Description Int32 id ID of the peer that has sent the data Declaration public short id Field Value Type Description Int16 samples A float array representing the audio sample data Declaration public float[] samples Field Value Type Description Single [] segmentIndex The segment index of the audio samples Declaration public int segmentIndex Field Value Type Description Int32"
  },
  "api/Adrenak.UniVoice.ChatroomPeerSettings.html": {
    "href": "api/Adrenak.UniVoice.ChatroomPeerSettings.html",
    "title": "Class ChatroomPeerSettings | UniVoice documentation",
    "keywords": "Class ChatroomPeerSettings Represents settings associated with a peer in the chatroom Inheritance Object ChatroomPeerSettings Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public class ChatroomPeerSettings Fields muteSelf Whether this peer will receive out voice. Use this to stop sending your audio to a peer. Declaration public bool muteSelf Field Value Type Description Boolean muteThem Whether this peer is muted. Use this to ignore a person. Declaration public bool muteThem Field Value Type Description Boolean"
  },
  "api/Adrenak.UniVoice.Extensions.html": {
    "href": "api/Adrenak.UniVoice.Extensions.html",
    "title": "Class Extensions | UniVoice documentation",
    "keywords": "Class Extensions Inheritance Object Extensions Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public static class Extensions Methods EnsureKey<T, K>(Dictionary<T, K>, T, K) Adds the given key to the dictionary with a value if the key is not present before. Declaration public static void EnsureKey<T, K>(this Dictionary<T, K> dict, T t, K k) Parameters Type Name Description Dictionary <T, K> dict T t The key to check and add K k The value if the key is added Type Parameters Name Description T K EnsurePair<T, K>(Dictionary<T, K>, T, K) Ensures a key and value pair are in the dictionary Declaration public static void EnsurePair<T, K>(this Dictionary<T, K> dict, T t, K k) Parameters Type Name Description Dictionary <T, K> dict T t The key to ensure K k The value associated with the key Type Parameters Name Description T K Position(AudioSource) Returns the normalized position of the AudioSource on its AudioClip Declaration public static float Position(this AudioSource source) Parameters Type Name Description AudioSource source Returns Type Description Single"
  },
  "api/Adrenak.UniVoice.html": {
    "href": "api/Adrenak.UniVoice.html",
    "title": "Namespace Adrenak.UniVoice | UniVoice documentation",
    "keywords": "Namespace Adrenak.UniVoice Classes ChatroomAgent Provides the means to host or connect to a chatroom. ChatroomPeerSettings Represents settings associated with a peer in the chatroom Extensions Structs ChatroomAudioDTO A data structure representing the audio transmitted over the network. Interfaces IAudioInput Source of user voice input. This would usually be implemented over a microphone to get the users voice. But it can also be used in other ways such as streaming an mp4 file from disk. It's just an input and the source doesn't matter. IAudioOutput Responsible for playing audio that is sent to it. You'd normally want a based implementation to play the audio in Unity. But this class can be used in other ways just as streaming the received audio to a server or writing it to a local file. It's just an audio output and the destination doesn't matter. IAudioOutputFactory An abstract factory that creates IAudioOutput based on given parameters. IChatroomAgentFactory IChatroomNetwork Enums ChatroomAgentMode Represents the mode that a ChatroomAgent is in."
  },
  "api/Adrenak.UniVoice.IAudioInput.html": {
    "href": "api/Adrenak.UniVoice.IAudioInput.html",
    "title": "Interface IAudioInput | UniVoice documentation",
    "keywords": "Interface IAudioInput Source of user voice input. This would usually be implemented over a microphone to get the users voice. But it can also be used in other ways such as streaming an mp4 file from disk. It's just an input and the source doesn't matter. Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public interface IAudioInput : IDisposable Properties ChannelCount The number of channels in the audio Declaration int ChannelCount { get; } Property Value Type Description Int32 Frequency The sampling frequency of the audio Declaration int Frequency { get; } Property Value Type Description Int32 SegmentRate The number of segments (a segment is a sequence of audio samples) that are emitted from the source every second. A 16000 Hz source with a rate of 10 will output an array of 1600 samples every 100 milliseconds. Declaration int SegmentRate { get; } Property Value Type Description Int32 Events OnSegmentReady Fired when a segment (sequence of audio samples) is ready Declaration event Action<int, float[]> OnSegmentReady Event Type Type Description Action < Int32 , Single []>"
  },
  "api/Adrenak.UniVoice.IAudioOutput.html": {
    "href": "api/Adrenak.UniVoice.IAudioOutput.html",
    "title": "Interface IAudioOutput | UniVoice documentation",
    "keywords": "Interface IAudioOutput Responsible for playing audio that is sent to it. You'd normally want a based implementation to play the audio in Unity. But this class can be used in other ways just as streaming the received audio to a server or writing it to a local file. It's just an audio output and the destination doesn't matter. Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public interface IAudioOutput : IDisposable Properties ID An ID associated with this audio output Declaration string ID { get; set; } Property Value Type Description String Methods Feed(Int32, Int32, Int32, Single[]) Feeds the data to the output implementation Declaration void Feed(int segmentIndex, int frequency, int channelCount, float[] audioSamples) Parameters Type Name Description Int32 segmentIndex The index of the segment of samples from the audio Int32 frequency The frequency/sampling rate of the audio Int32 channelCount The number of channels in the audio Single [] audioSamples The audio samples/segment being fed"
  },
  "api/Adrenak.UniVoice.IAudioOutputFactory.html": {
    "href": "api/Adrenak.UniVoice.IAudioOutputFactory.html",
    "title": "Interface IAudioOutputFactory | UniVoice documentation",
    "keywords": "Interface IAudioOutputFactory An abstract factory that creates IAudioOutput based on given parameters. Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public interface IAudioOutputFactory Methods Create(Int32, Int32, Int32) Creates an instance of a concrete IAudioOutput class Declaration IAudioOutput Create(int frequency, int channelCount, int samplesLen) Parameters Type Name Description Int32 frequency Frequency/sample rate of the audio Int32 channelCount Number of audio channels in data Int32 samplesLen Number of samples in audio segment Returns Type Description IAudioOutput"
  },
  "api/Adrenak.UniVoice.IChatroomAgentFactory.html": {
    "href": "api/Adrenak.UniVoice.IChatroomAgentFactory.html",
    "title": "Interface IChatroomAgentFactory | UniVoice documentation",
    "keywords": "Interface IChatroomAgentFactory Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public interface IChatroomAgentFactory Methods Create() Declaration ChatroomAgent Create() Returns Type Description ChatroomAgent"
  },
  "api/Adrenak.UniVoice.IChatroomNetwork.html": {
    "href": "api/Adrenak.UniVoice.IChatroomNetwork.html",
    "title": "Interface IChatroomNetwork | UniVoice documentation",
    "keywords": "Interface IChatroomNetwork Namespace : Adrenak.UniVoice Assembly : cs.temp.dll.dll Syntax public interface IChatroomNetwork : IDisposable Properties CurrentChatroomName Name of of the chatroom we are currently in Declaration string CurrentChatroomName { get; } Property Value Type Description String OwnID The ID of the local user in the current chatroom Declaration short OwnID { get; } Property Value Type Description Int16 PeerIDs IDs of all the peers in the current chatroom Declaration List<short> PeerIDs { get; } Property Value Type Description List < Int16 > Methods CloseChatroom() Closes a chatroom that the local user is hosting Declaration void CloseChatroom() HostChatroom(String) Creates a chatroom Declaration void HostChatroom(string chatroomName) Parameters Type Name Description String chatroomName Name of the chatroom JoinChatroom(String) Joins a chatroom Declaration void JoinChatroom(string chatroomName) Parameters Type Name Description String chatroomName The name of the chatroom to join LeaveChatroom() Leaves the chatroom the local user is currently in, if any Declaration void LeaveChatroom() SendAudioSegment(ChatroomAudioDTO) Sends audio data over the network to a peer. Declaration void SendAudioSegment(ChatroomAudioDTO data) Parameters Type Name Description ChatroomAudioDTO data The data to be transmitted. Events OnAudioReceived Fired when the network receives audio data from a peer. Declaration event Action<ChatroomAudioDTO> OnAudioReceived Event Type Type Description Action < ChatroomAudioDTO > OnAudioSent Fired when the local user sets audio data to a peer. Declaration event Action<ChatroomAudioDTO> OnAudioSent Event Type Type Description Action < ChatroomAudioDTO > OnChatroomCreationFailed Fired when the attempt to create a chatroom fails. Provides an exception as event data. Declaration event Action<Exception> OnChatroomCreationFailed Event Type Type Description Action < Exception > OnChatroomJoinFailed Fired when an attempt to join a chatroom fails. Provides an exception as event data. Declaration event Action<Exception> OnChatroomJoinFailed Event Type Type Description Action < Exception > OnClosedChatroom Fired when a chatroom is closed. Declaration event Action OnClosedChatroom Event Type Type Description Action OnCreatedChatroom Fired when a chatroom is created. Declaration event Action OnCreatedChatroom Event Type Type Description Action OnJoinedChatroom Fired when the local user joins a chatroom. Provides the chatroom ID assigned as event data. Declaration event Action<short> OnJoinedChatroom Event Type Type Description Action < Int16 > OnLeftChatroom Fired when the local user leaves a chatroom Declaration event Action OnLeftChatroom Event Type Type Description Action OnPeerJoinedChatroom Fired when a peer joins the chatroom. Provides the ID of the peer as event data. Declaration event Action<short> OnPeerJoinedChatroom Event Type Type Description Action < Int16 > OnPeerLeftChatroom Fired when a peer leaves the chatroom. Provides the ID of the peer as event data. Declaration event Action<short> OnPeerLeftChatroom Event Type Type Description Action < Int16 >"
  },
  "api/Adrenak.UniVoice.InbuiltImplementations.AirPeerUniVoiceNetwork.html": {
    "href": "api/Adrenak.UniVoice.InbuiltImplementations.AirPeerUniVoiceNetwork.html",
    "title": "Class AirPeerUniVoiceNetwork | UniVoice documentation",
    "keywords": "Class AirPeerUniVoiceNetwork A IChatroomNetwork implementation using AirPeer For more on AirPeer, visit https://www.vatsalambastha.com/airpeer Notes: An APNode node doesn't receive its client ID immediately after connecting to an APNetwork, it receives it after joining the network from the host. But while it's waiting it still has peers. This class makes sure that until the APNode doesn't receive its ID, a consumer of it will think it hasn't been connected. TLDR; APNode first connects to host, and is given its ID by the host after joining. We don't let anyone know we have connected until th Inheritance Object AirPeerUniVoiceNetwork Implements IChatroomNetwork Namespace : Adrenak.UniVoice.InbuiltImplementations Assembly : cs.temp.dll.dll Syntax public class AirPeerUniVoiceNetwork : IChatroomNetwork, IDisposable Constructors AirPeerUniVoiceNetwork(String) Creates an AirPeer based chatroom network Declaration public AirPeerUniVoiceNetwork(string signalingServerURL) Parameters Type Name Description String signalingServerURL The signaling server URL AirPeerUniVoiceNetwork(String, String) Creates an AirPeer based chatroom network Declaration public AirPeerUniVoiceNetwork(string signalingServerURL, string iceServerURLs) Parameters Type Name Description String signalingServerURL The signaling server URL String iceServerURLs ICE server urls Properties CurrentChatroomName Declaration public string CurrentChatroomName { get; } Property Value Type Description String OwnID Declaration public short OwnID { get; } Property Value Type Description Int16 PeerIDs Declaration public List<short> PeerIDs { get; } Property Value Type Description List < Int16 > Methods CloseChatroom() Declaration public void CloseChatroom() Dispose() Declaration public void Dispose() HostChatroom(String) Declaration public void HostChatroom(string chatroomName) Parameters Type Name Description String chatroomName JoinChatroom(String) Declaration public void JoinChatroom(string chatroomName) Parameters Type Name Description String chatroomName LeaveChatroom() Declaration public void LeaveChatroom() SendAudioSegment(ChatroomAudioDTO) Declaration public void SendAudioSegment(ChatroomAudioDTO data) Parameters Type Name Description ChatroomAudioDTO data Events OnAudioReceived Declaration public event Action<ChatroomAudioDTO> OnAudioReceived Event Type Type Description Action < ChatroomAudioDTO > OnAudioSent Declaration public event Action<ChatroomAudioDTO> OnAudioSent Event Type Type Description Action < ChatroomAudioDTO > OnChatroomCreationFailed Declaration public event Action<Exception> OnChatroomCreationFailed Event Type Type Description Action < Exception > OnChatroomJoinFailed Declaration public event Action<Exception> OnChatroomJoinFailed Event Type Type Description Action < Exception > OnClosedChatroom Declaration public event Action OnClosedChatroom Event Type Type Description Action OnCreatedChatroom Declaration public event Action OnCreatedChatroom Event Type Type Description Action OnJoinedChatroom Declaration public event Action<short> OnJoinedChatroom Event Type Type Description Action < Int16 > OnLeftChatroom Declaration public event Action OnLeftChatroom Event Type Type Description Action OnPeerJoinedChatroom Declaration public event Action<short> OnPeerJoinedChatroom Event Type Type Description Action < Int16 > OnPeerLeftChatroom Declaration public event Action<short> OnPeerLeftChatroom Event Type Type Description Action < Int16 > Implements IChatroomNetwork"
  },
  "api/Adrenak.UniVoice.InbuiltImplementations.html": {
    "href": "api/Adrenak.UniVoice.InbuiltImplementations.html",
    "title": "Namespace Adrenak.UniVoice.InbuiltImplementations | UniVoice documentation",
    "keywords": "Namespace Adrenak.UniVoice.InbuiltImplementations Classes AirPeerUniVoiceNetwork A IChatroomNetwork implementation using AirPeer For more on AirPeer, visit https://www.vatsalambastha.com/airpeer Notes: An APNode node doesn't receive its client ID immediately after connecting to an APNetwork, it receives it after joining the network from the host. But while it's waiting it still has peers. This class makes sure that until the APNode doesn't receive its ID, a consumer of it will think it hasn't been connected. TLDR; APNode first connects to host, and is given its ID by the host after joining. We don't let anyone know we have connected until th InbuiltAudioBuffer Used to arrange irregular, out of order and skipped audio segments for better playback. InbuiltAudioOutput This class feeds incoming segments of audio to an AudioBuffer and plays the buffer's clip on an AudioSource. It also clears segments of the buffer based on the AudioSource's position. InbuiltAudioOutputFactory Creates InbuiltAudioOutput instances InbuiltChatroomAgentFactory UniMicAudioInput An IAudioInput implementation based on UniMic. For more on UniMic, visit https://www.github.com/adrenak/unimic"
  },
  "api/Adrenak.UniVoice.InbuiltImplementations.InbuiltAudioBuffer.html": {
    "href": "api/Adrenak.UniVoice.InbuiltImplementations.InbuiltAudioBuffer.html",
    "title": "Class InbuiltAudioBuffer | UniVoice documentation",
    "keywords": "Class InbuiltAudioBuffer Used to arrange irregular, out of order and skipped audio segments for better playback. Inheritance Object InbuiltAudioBuffer Namespace : Adrenak.UniVoice.InbuiltImplementations Assembly : cs.temp.dll.dll Syntax public class InbuiltAudioBuffer Constructors InbuiltAudioBuffer(Int32, Int32, Int32, Int32, String) Create an instance Declaration public InbuiltAudioBuffer(int frequency, int channels, int segDataLen, int segCount = 3, string clipName = null) Parameters Type Name Description Int32 frequency The frequency of the audio Int32 channels Number of channels in the audio Int32 segDataLen Number of samples in the audio Int32 segCount Number of segments stored in buffer String clipName Properties AudioClip Declaration public AudioClip AudioClip { get; } Property Value Type Description AudioClip SegCount Declaration public int SegCount { get; } Property Value Type Description Int32 SegDataLen Declaration public int SegDataLen { get; } Property Value Type Description Int32 Methods Clear() Clear the entire buffer Declaration public void Clear() Clear(Int32) Clears the buffer at the specified local index Declaration public bool Clear(int index) Parameters Type Name Description Int32 index Returns Type Description Boolean GetNormalizedIndex(Int32) Returns the index after looping around the buffer Declaration public int GetNormalizedIndex(int absoluteIndex) Parameters Type Name Description Int32 absoluteIndex Returns Type Description Int32 Write(Int32, Single[]) Feed an audio segment to the buffer. Declaration public bool Write(int absoluteIndex, float[] audioSegment) Parameters Type Name Description Int32 absoluteIndex Absolute index of the audio segment from the source. Single [] audioSegment Audio samples data Returns Type Description Boolean"
  },
  "api/Adrenak.UniVoice.InbuiltImplementations.InbuiltAudioOutput.html": {
    "href": "api/Adrenak.UniVoice.InbuiltImplementations.InbuiltAudioOutput.html",
    "title": "Class InbuiltAudioOutput | UniVoice documentation",
    "keywords": "Class InbuiltAudioOutput This class feeds incoming segments of audio to an AudioBuffer and plays the buffer's clip on an AudioSource. It also clears segments of the buffer based on the AudioSource's position. Inheritance Object InbuiltAudioOutput Implements IAudioOutput Namespace : Adrenak.UniVoice.InbuiltImplementations Assembly : cs.temp.dll.dll Syntax public class InbuiltAudioOutput : MonoBehaviour, IAudioOutput, IDisposable Properties AudioBuffer Declaration public InbuiltAudioBuffer AudioBuffer { get; } Property Value Type Description InbuiltAudioBuffer AudioSource Declaration public AudioSource AudioSource { get; } Property Value Type Description AudioSource ID Declaration public string ID { get; set; } Property Value Type Description String MinSegCount Declaration public int MinSegCount { get; } Property Value Type Description Int32 Methods Dispose() Disposes the instance by deleting the GameObject of the component. Declaration public void Dispose() Feed(Int32, Int32, Int32, Single[]) Feeds incoming audio into the audio buffer. Declaration public void Feed(int index, int frequency, int channelCount, float[] audioSamples) Parameters Type Name Description Int32 index The absolute index of the segment, as reported by the peer to know the normalized position of the segment on the buffer Int32 frequency Int32 channelCount Single [] audioSamples The audio samples being fed New(InbuiltAudioBuffer, AudioSource, Int32) Creates a new instance using the dependencies. Declaration public static InbuiltAudioOutput New(InbuiltAudioBuffer buffer, AudioSource source, int minSegCount = 0) Parameters Type Name Description InbuiltAudioBuffer buffer The AudioBuffer that the streamer operates on. AudioSource source The AudioSource from where the incoming audio is played. Int32 minSegCount The minimum number of audio segments AudioBuffer must have for the streamer to play the audio. This value is capped between 1 and SegCount of the AudioBuffer passed. Default: 0. Results in the value being set to the max possible. Returns Type Description InbuiltAudioOutput Implements IAudioOutput"
  },
  "api/Adrenak.UniVoice.InbuiltImplementations.InbuiltAudioOutputFactory.html": {
    "href": "api/Adrenak.UniVoice.InbuiltImplementations.InbuiltAudioOutputFactory.html",
    "title": "Class InbuiltAudioOutputFactory | UniVoice documentation",
    "keywords": "Class InbuiltAudioOutputFactory Creates InbuiltAudioOutput instances Inheritance Object InbuiltAudioOutputFactory Implements IAudioOutputFactory Namespace : Adrenak.UniVoice.InbuiltImplementations Assembly : cs.temp.dll.dll Syntax public class InbuiltAudioOutputFactory : IAudioOutputFactory Constructors InbuiltAudioOutputFactory() Declaration public InbuiltAudioOutputFactory() InbuiltAudioOutputFactory(Int32, Int32) Declaration public InbuiltAudioOutputFactory(int bufferSegCount, int minSegCount) Parameters Type Name Description Int32 bufferSegCount Int32 minSegCount Properties BufferSegCount Declaration public int BufferSegCount { get; } Property Value Type Description Int32 MinSegCount Declaration public int MinSegCount { get; } Property Value Type Description Int32 Methods Create(Int32, Int32, Int32) Declaration public IAudioOutput Create(int samplingRate, int channelCount, int segmentLength) Parameters Type Name Description Int32 samplingRate Int32 channelCount Int32 segmentLength Returns Type Description IAudioOutput Implements IAudioOutputFactory"
  },
  "api/Adrenak.UniVoice.InbuiltImplementations.InbuiltChatroomAgentFactory.html": {
    "href": "api/Adrenak.UniVoice.InbuiltImplementations.InbuiltChatroomAgentFactory.html",
    "title": "Class InbuiltChatroomAgentFactory | UniVoice documentation",
    "keywords": "Class InbuiltChatroomAgentFactory Inheritance Object InbuiltChatroomAgentFactory Implements IChatroomAgentFactory Namespace : Adrenak.UniVoice.InbuiltImplementations Assembly : cs.temp.dll.dll Syntax public class InbuiltChatroomAgentFactory : IChatroomAgentFactory Constructors InbuiltChatroomAgentFactory(String) Declaration public InbuiltChatroomAgentFactory(string signalingServerURL) Parameters Type Name Description String signalingServerURL Properties SignalingServerURL Declaration public string SignalingServerURL { get; set; } Property Value Type Description String Methods Create() Declaration public ChatroomAgent Create() Returns Type Description ChatroomAgent Implements IChatroomAgentFactory"
  },
  "api/Adrenak.UniVoice.InbuiltImplementations.UniMicAudioInput.html": {
    "href": "api/Adrenak.UniVoice.InbuiltImplementations.UniMicAudioInput.html",
    "title": "Class UniMicAudioInput | UniVoice documentation",
    "keywords": "Class UniMicAudioInput An IAudioInput implementation based on UniMic. For more on UniMic, visit https://www.github.com/adrenak/unimic Inheritance Object UniMicAudioInput Implements IAudioInput Namespace : Adrenak.UniVoice.InbuiltImplementations Assembly : cs.temp.dll.dll Syntax public class UniMicAudioInput : IAudioInput, IDisposable Constructors UniMicAudioInput(Mic) Declaration public UniMicAudioInput(Mic mic) Parameters Type Name Description Mic mic Properties ChannelCount Declaration public int ChannelCount { get; } Property Value Type Description Int32 Frequency Declaration public int Frequency { get; } Property Value Type Description Int32 SegmentRate Declaration public int SegmentRate { get; } Property Value Type Description Int32 Methods Dispose() Declaration public void Dispose() Events OnSegmentReady Declaration public event Action<int, float[]> OnSegmentReady Event Type Type Description Action < Int32 , Single []> Implements IAudioInput"
  },
  "api/Adrenak.UniVoice.Samples.AndroidPermissionCallback.html": {
    "href": "api/Adrenak.UniVoice.Samples.AndroidPermissionCallback.html",
    "title": "Class AndroidPermissionCallback | UniVoice documentation",
    "keywords": "Class AndroidPermissionCallback Inheritance Object AndroidPermissionCallback Namespace : Adrenak.UniVoice.Samples Assembly : cs.temp.dll.dll Syntax public class AndroidPermissionCallback : AndroidJavaProxy Constructors AndroidPermissionCallback(Action<String>, Action<String>) Declaration public AndroidPermissionCallback(Action<string> onGrantedCallback, Action<string> onDeniedCallback) Parameters Type Name Description Action < String > onGrantedCallback Action < String > onDeniedCallback Methods OnPermissionDenied(String) Declaration public virtual void OnPermissionDenied(string permissionName) Parameters Type Name Description String permissionName OnPermissionGranted(String) Declaration public virtual void OnPermissionGranted(string permissionName) Parameters Type Name Description String permissionName"
  },
  "api/Adrenak.UniVoice.Samples.AndroidPermissionsManager.html": {
    "href": "api/Adrenak.UniVoice.Samples.AndroidPermissionsManager.html",
    "title": "Class AndroidPermissionsManager | UniVoice documentation",
    "keywords": "Class AndroidPermissionsManager Inheritance Object AndroidPermissionsManager Namespace : Adrenak.UniVoice.Samples Assembly : cs.temp.dll.dll Syntax public class AndroidPermissionsManager Methods IsPermissionGranted(String) Declaration public static bool IsPermissionGranted(string permissionName) Parameters Type Name Description String permissionName Returns Type Description Boolean RequestPermission(String, AndroidPermissionCallback) Declaration public static void RequestPermission(string permissionName, AndroidPermissionCallback callback) Parameters Type Name Description String permissionName AndroidPermissionCallback callback RequestPermission(String[], AndroidPermissionCallback) Declaration public static void RequestPermission(string[] permissionNames, AndroidPermissionCallback callback) Parameters Type Name Description String [] permissionNames AndroidPermissionCallback callback"
  },
  "api/Adrenak.UniVoice.Samples.GroupVoiceCallSample.html": {
    "href": "api/Adrenak.UniVoice.Samples.GroupVoiceCallSample.html",
    "title": "Class GroupVoiceCallSample | UniVoice documentation",
    "keywords": "Class GroupVoiceCallSample Inheritance Object GroupVoiceCallSample Namespace : Adrenak.UniVoice.Samples Assembly : cs.temp.dll.dll Syntax public class GroupVoiceCallSample : MonoBehaviour Fields chatroomGO Declaration public GameObject chatroomGO Field Value Type Description GameObject chatroomMessage Declaration public Text chatroomMessage Field Value Type Description Text exitButton Declaration public Button exitButton Field Value Type Description Button hostButton Declaration public Button hostButton Field Value Type Description Button inputField Declaration public InputField inputField Field Value Type Description InputField joinButton Declaration public Button joinButton Field Value Type Description Button menuGO Declaration public GameObject menuGO Field Value Type Description GameObject menuMessage Declaration public Text menuMessage Field Value Type Description Text muteOthersToggle Declaration public Toggle muteOthersToggle Field Value Type Description Toggle muteSelfToggle Declaration public Toggle muteSelfToggle Field Value Type Description Toggle peerViewContainer Declaration public Transform peerViewContainer Field Value Type Description Transform peerViewTemplate Declaration public PeerView peerViewTemplate Field Value Type Description PeerView"
  },
  "api/Adrenak.UniVoice.Samples.html": {
    "href": "api/Adrenak.UniVoice.Samples.html",
    "title": "Namespace Adrenak.UniVoice.Samples | UniVoice documentation",
    "keywords": "Namespace Adrenak.UniVoice.Samples Classes AndroidPermissionCallback AndroidPermissionsManager GroupVoiceCallSample PeerView ToggleExtension"
  },
  "api/Adrenak.UniVoice.Samples.PeerView.html": {
    "href": "api/Adrenak.UniVoice.Samples.PeerView.html",
    "title": "Class PeerView | UniVoice documentation",
    "keywords": "Class PeerView Inheritance Object PeerView Namespace : Adrenak.UniVoice.Samples Assembly : cs.temp.dll.dll Syntax public class PeerView : MonoBehaviour Properties IncomingAudio Declaration public bool IncomingAudio { get; set; } Property Value Type Description Boolean OutgoingAudio Declaration public bool OutgoingAudio { get; set; } Property Value Type Description Boolean Methods DisplaySpectrum(Single[]) Declaration public void DisplaySpectrum(float[] spectrum) Parameters Type Name Description Single [] spectrum SetPeerID(Int16) Declaration public void SetPeerID(short id) Parameters Type Name Description Int16 id Events OnIncomingModified Declaration public event Action<bool> OnIncomingModified Event Type Type Description Action < Boolean > OnOutgoingModified Declaration public event Action<bool> OnOutgoingModified Event Type Type Description Action < Boolean >"
  },
  "api/Adrenak.UniVoice.Samples.ToggleExtension.html": {
    "href": "api/Adrenak.UniVoice.Samples.ToggleExtension.html",
    "title": "Class ToggleExtension | UniVoice documentation",
    "keywords": "Class ToggleExtension Inheritance Object ToggleExtension Namespace : Adrenak.UniVoice.Samples Assembly : cs.temp.dll.dll Syntax public static class ToggleExtension Methods SetIsOnWithoutNotify(Toggle, Boolean) Declaration public static void SetIsOnWithoutNotify(this Toggle instance, bool value) Parameters Type Name Description Toggle instance Boolean value"
  },
  "index.html": {
    "href": "index.html",
    "title": "UniVoice | UniVoice documentation",
    "keywords": "UniVoice UniVoice is a voice chat/VoIP solution for Unity. It comes with ready-to-use P2P (peer to peer) connectivity which allows devices to communicate nearly free of cost*. For the underlying P2P solution, please visit AirPeer Some features of UniVoice: 👥 Group voice chat. Multiple peers can join a chatroom and exchange audio. ⚙ Peer specific settings. Don't want to listen to a peer? Mute them. Don't want someone listening to you? Mute yourself against them. ✍ Edit outgoing and incoming audio with filters and effects. (No filters or effects provided out of the box currently) 🎨 Customize your audio input, output and networking layer. 🎤 Configurable Audio Input : Decide what the input of your outgoing audio is. Let it be from Unity's Microphone class, or a live streaming audio, or an MP4 file on the disk. 🔊 Configurable Audio Output : Decide where the incoming peer audio ges. Let the output of incoming audio be Unity AudioSource to play the audio in-game, or write it into an MP4 on the disk, or stream it to an online service. 🌐 Configurable Network : Want to use UniVoice in a WLAN project using Telepathy? Just adapt its API for UniVoice with a simple the IChatroomNetwork interface. Using your own backend for multiplayer? Create and expose your audio API and write a UniVoice implementation, again with the same interface. 📦 Provides out-of-the-box implementation for audio input, output and networking. Just run the group chat sample in Unity. UniVoice comes packaged with: 🎤 Audio Input : based on UniMic which sends your microphone input over the network. 🔊 Audio Output : source that plays incoming peer audio on Unity AudioSource 🌐 P2P network : implementation based on AirPeer which uses WebRTC for free-of-cost networking between peers. Plus, to get started you don't need to worry about hosting your own WebRTC signaling server as a server that's good enough for testing is already available. (See the project samples for more details) *signaling server costs still apply, but they are minimal and sometimes free on platforms such as Heroku Documentation For the API documentation, please visit http://www.vatsalambastha.com/univoice Manuals, Wiki, Tutorials, etc. are not available yet. Usage Creating a chatroom agent To be able to host and join voice chatrooms, you need a ChatroomAgent instance. To get the ready-to-use inbuilt implementation, use this var agent = new InbuiltChatroomAgentFactory(SIGNALING_SERVER_URL).Create(); // Don't worry, a signaling server URL is available inside the repositories samples code. Hosting and joining chatrooms Every peer in the chatroom is assigned an ID by the host. And every peer has a peer list, representing the other peers in the chatroom. To get your ID agent.ID; ChatroomAgent exposes Network , an implementation of IChatroomNetwork To get a list of the other peers in the chatroom, use this: agent.Network.Peers agent.Network also provides methods to host or join a chatroom. Here is how you use them: // Host a chatroom using a name agent.Network.HostChatroom(\"ROOM_NAME\"); // Join an existing chatroom using a name agent.Network.JoinChatroom(\"ROOM_NAME\"); // Leave the chatroom, if connected to one agent.Network.LeaveChatroom(); // Closes a chatroom, if was hosting one agent.Network.CloseChatroom(); Muting Audio To mute everyone in the chatroom, use agent.MuteOthers = true; or set it to false to unmute them all. To mute yourself use agent.MuteSelf = true; or set it to false to unmute yourself. This will stop sending your audio to all the peers in the chatroom. For muting a specific peer, first get the peers settings object using this: var settings = agent.PeerSettings[id]; // where id belongs to the peer in question settings.muteThem = true; If you want to mute yourself towards a specific peer, use this: var settings = agent.PeerSettings[id]; // where id belongs to the peer in question settings.muteSelf = true; Events agent.Network provides several network related events. Refer to the API reference for them. Known Issues UniVoice is based on AirPeer which currently has an issue where peers on different networks are often unable to connect. Eg. two mobile phone in different geographical locations are trying to have a voice chat. Both are connected to their respective WiFi. One hosts and waits for the other. The one trying to join may fail and only succeed when the connection is changed from its Wifi to cellular data. This issue will be addressed inside AirPeer itself. For more see the 'Connectivity issues' section at the AirPeer Homepage Alternatively, a Unity WebRTC based implementation of UniVoice's network interface may be directly introduced. In either case, there a need to have a newer underlying networking solution. License and Support This project under the MIT license . Updates and maintenance are not guaranteed and the project is maintained by the original developer in his free time. Community contributions are welcome. Commercial consultation and development can be arranged but is subject to schedule and availability. Contact The developer can be reached at the following links: Website LinkedIn GitHub Twitter"
  }
}